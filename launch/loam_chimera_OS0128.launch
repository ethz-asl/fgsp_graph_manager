<launch>
  <param name="use_sim_time" value="true" /> #be sure to run --clock

  # CHIMERA - Frame Connector - Only needed if localization manager is not running
  <!-- <node pkg="tf" type="static_transform_publisher" name="map_corrected_tf" respawn="true" args="0 0 0 0 0 0 map camera_init_CORRECTED 10"/>
  <node pkg="tf" type="static_transform_publisher" name="corrected_init_tf" respawn="true" args="0 0 0 1.570796327 0 1.570796327 camera_init_CORRECTED camera_init 10 "/> -->
  # CHIMERA - Frame Connector

  <!-- Input topics remap -->
  <arg name="pointcloud_topic_name" default="/lidar/point_cloud" /> #/point_cloud_filter/lidar/point_cloud_filtered
  <arg name="imu_topic_name" default="/sensors/imu" />

  <!-- Config params -->
  <arg name="config_filename" default="$(find loam)/config/loam_chimera_params.yaml" />

  <!-- LOAM Nodelet Manager -->
  <node pkg="nodelet" type="nodelet" name="loam_nodelet_manager" args="manager" output="screen" clear_params="true"/> #launch-prefix="gdb -ex run --args" />
  
  <!-- Laser Multiscan Registration Nodelet -->
  <node pkg="nodelet" type="nodelet" name="laser_multiscan_registration_nodelet" args="load laser_multiscan_registration_nodelet loam_nodelet_manager" output="screen">
    <rosparam file="$(arg config_filename)" command="load"/>
    <remap from="/multi_scan_points" to="$(arg pointcloud_topic_name)" />
  </node>

  <!-- Laser Odometry Nodelet -->
  <node pkg="nodelet" type="nodelet" name="laser_odometry_nodelet" args="load laser_odometry_nodelet loam_nodelet_manager" output="screen">
    <rosparam file="$(arg config_filename)" command="load"/>
    <remap from="/imu" to="$(arg imu_topic_name)" />
  </node>

  <!-- Laser Mapping Nodelet -->
  <node pkg="nodelet" type="nodelet" name="laser_mapping_nodelet" args="load laser_mapping_nodelet loam_nodelet_manager" output="screen">
    <rosparam file="$(arg config_filename)" command="load"/>
    <param name="saved_submaps_filepath" value="$(find loam)"/>
    <remap from="/aft_mapped_to_init_CORRECTED" to="/loam/odometry" /> #For offline use with ANYmal stack
  </node> 

  <!-- Laser Transform Maintenance Nodelet -->
  <node pkg="nodelet" type="nodelet" name="laser_transform_maintenance_nodelet" args="load laser_transform_maintenance_nodelet loam_nodelet_manager" output="screen">
    <rosparam file="$(arg config_filename)" command="load"/>
  </node>

</launch>